Java 没有任何无符号类型

一、整型：
byte -- 1字节-- -128~127
short --2字节-- -32768~32767
int -- 4字节 -- 
long -- 8字节

二、浮点型
float -- 4字节
double -- 8字节
float 类型的数值有一个后缀 F，没有后缀 F 的浮点数值（如 3.14）默认为double 类型。

常量 Double.POSITIVE_INFINITY（正无穷大） 一个正整数除以 0 的结果为正无穷大
Double.NEGATIVE_INFINITY（负无穷大） 计算0/0 或者负数的平方根结果为 NaN
Double.NaN

浮点数值不适用于禁止出现舍入误差的金融计算中。
如果需要在数值计算中不含有任何舍入误差，就应该使用BigDecimal 类

三、char
char 类型用于表示单个字符。通常用来表示字符常量。

特殊字符的转义序列符
\b 退格
\t 制表
\n 换行
\r 回车
\' 单引号
\" 双引号
\\ 反斜杠

char 类型用 UTF-16 编码描述一个代码单元。
强烈建议不要在程序中使用 char 类型，除非确实需要对 UTF-16 代码单元进行操作

四、boolean类型
boolean（布尔）类型有两个值：false 和 true，用来判定逻辑条件。默认false

五、变量

六、常量
关键字 final 表示这个变量只能被赋值一次。一旦被赋值之后，就不能够再更改了。
以使用关键字 static final 设置一个类常量。

七、运算符

自增运算符与自减运算符
关系运算符与 boolean 运算符

位运算符：
“ >>”和“ <<”运算符将二进制位进行右移或左移操作
>>> 运算符将用 0 填充高位；>> 运算符用符号位填充高位。

数值类型之间的转换
见图“数值类型之间的转换”
6 个实心箭头，表示无信息丢失的转换；有 3 个虚箭头，表示可能有精度损失的转换。

强制类型转换

括号与运算符级别：
见图“运算符优先级”
如果不使用圆括号，就按照给出的运算符优先级次序进行计算。同一个级别的运算符按照从左到右的次序进行计算

枚举类型：

八、字符串

不可变字符串有一个优点：编译器可以让字符串共享。

StringBuilder类前身为StringBuffer,StringBuffer效率稍微有些低，但允许多线程方式执行添加或者删除字符操作。
如果所有的字符串都在一个单线程中编辑，则需要用StringBuilder代替。这两个类的API是相同的。

九、大数值
如果基本的整数和浮点数精度不能够满足需求，那么可以使用 java.math 包中的两个
很有用的类：BigInteger 和 BigDecimal。这两个类可以处理包含任意长度数字序列的数值。
BigInteger 类实现了任意精度的整数运算，BigDecimal 实现了任意精度的浮点数运算。

十、数组

数组拷贝：两个变量将引用同一个数组
如果希望将一个数组的所有值拷贝到一个新的数组中去，就要使用 Arrays 类的 copyTo 方法

Java 实际上没有多维数组，只有一维数组。
















