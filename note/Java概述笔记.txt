一、Java的特性
1、一种纯面向对象的编程语言
2、一种与平台无关的语言（它提供了在不同平台下运行的解释环境）
3、一种健壮的语言，吸收了C/C++语言的优点
4、有比较高的安全性（GC，强类型，没有指针）

二、Java跨平台原理
Java源码编译（javac.exe）成Java字节码，在运行到JVM虚拟机上即可跨平台
运行时：由类加载器加载编译好的字节码，再由字节码校验器校验，再到解释器(java.exe)，最后驱动硬件

三、JRE主要功能
加载代码：由类加载器(class loader)完成；
校验代码：由字节码校验器(bytecode verifier)完成；
执行代码：由运行时解释器(runtime interpreter)完成。


this()与 super()其相似之处：（1）当构造方法有重载时，两者均会根据所给予的参
数的类型与个数，正确地执行相对应的构造方法。（2）两者均必须编写在构造方
法内的第一行，也正是这个原因，this()与 super()无法同时存在同一个构造方法内。


transient关键字：

将不需要序列化的属性前添加关键字transient，序列化对象的时候，这个属性就不会序列化到指定的目的地中。

1）一旦变量被transient修饰，变量将不再是对象持久化的一部分，该变量内容在序列化后无法获得访问。

2）transient关键字只能修饰变量，而不能修饰方法和类。注意，本地变量是不能被transient关键字修饰的。变量如果是用户自定义类变量，则该类需要实现Serializable接口。

3）被transient关键字修饰的变量不再能被序列化，一个静态变量不管是否被transient修饰，均不能被序列化。